/*
使用sass的好处：
1.方便写嵌套样式，避免多余的冗余
2.类名命名参考bootstrap
*/


//reset

* {
    box-sizing: border-box;//表示以边框为准
    outline: none;//取消高亮
}

html {
    font-size: 13px;//基础字体大小
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;//字体
    line-height: 1.2em;
    background: #f1f1f1;
}

a {
    color: #999999;
}

/*
1.在sass里，数组有两种形式：list 和 map 
2.以下为助手工具类
*/

//colors
/*
1.可以从亮到暗来排列颜色
*/
$colors : (
  
    //主色调
    "primary" : #db9e3f,
    //因为"white" 与颜色值相同。所以需要引号
    "white" :#fff,
    "light" :#f9f9f9,
    "grey" : #999,
    "dark-1" : #343440,
    "dark" : #222,
    "black" : #000,
);


@each $colorKey,$color in $colors {
    //字体颜色工具类
    .text-#{$colorKey} {
        color: $color;
    }
    //背景颜色工具类
    .bg-#{$colorKey} {
        background-color: $color;
    }
}

//text-align
@each $var in (left, center, right) {
    //工具类
    .text-#{$var} {
        text-align: $var;
    }
}

//font-size
$base-font-size:1rem;//表示13px
$font-sizes:(
    xs: 0.7692, //10px
    sm: 0.9231, //12px
    md: 1, //13px
    lg: 1.0769, //14px
    xl: 1.2,//16px
);

@each $sizeKey,$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

//flex
.d-flex {//水平
    display: flex;
}

.flex-column {
    flex-direction: column;
}

$flex-jc: ( //主轴和交叉轴的对其方式
    start: start,
    end: end,
    center:center,
    between:space-between,
    around: space-around, 
);

@each $key,$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai: ( ////主轴和交叉轴的对其方式
    start: start,
    end: end,
    center:center,
    stretch: stretch,//等高
);

@each $key,$value in $flex-ai {
    .ai-#{$key} {
       align-items: $value;
    }
}


.flex-1 {
    flex: 1;//固定
}

.flex-grow-1 {
    flex-grow: 1;//自动拉伸
}


/*
1.边距的定义参考bootstrap
2.边距分为 margin 和 padding ，方向：上，下，左，右
*/
//spacing
//0-5：0..
//.mt-1 => margin-top level1
$spacing-types: ( //类型
    m: margin,
    p: padding
);

$spacing-directions: ( //方向
    t: top,
    r: right,
    b: bottom,
    l: left
);

$spacing-base-size: 1rem;
$spacing-sizes: ( //大小
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3
);

//.m-0,.mx-0
@each $typeKey,$type in $spacing-types {

   //.m-1
   @each $sizeKey,$size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}-#{$size}: $size * $spacing-base-size;
        }
    }

    //.mx-1,my-1
    @each $sizeKey,$size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} { //水平
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }

        .#{$typeKey}y-#{$sizeKey} { //垂直
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }
    }

    //.mt-1 
    @each $directionKey,$direction in $spacing-directions {
        @each $sizeKey,$size in $spacing-sizes {
            //.mt-1{margin-top:1rem}
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }



}