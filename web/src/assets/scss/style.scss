@import './variables';


/*
使用sass的好处：
1.方便写嵌套样式，避免多余的冗余
2.类名命名参考bootstrap
*/


//reset

* {
    box-sizing: border-box;//表示以边框为准
    outline: none;//取消高亮
}

html {
    font-size: 13px;//基础字体大小
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;//字体
    line-height: 1.2em;
    background: #f1f1f1;
    -webkit-font-smoothing:antialiased;//字体粗细，变细
}

a {
    color: #999999;
}

p {
  line-height: 1.5em;
} 

/*
1.在sass里，数组有两种形式：list 和 map 
2.以下为助手工具类
*/

//colors
/*
1.可以从亮到暗来排列颜色
*/
@each $colorKey,$color in $colors {
    //字体颜色工具类
    .text-#{$colorKey} {
        color: $color;
    }
    //背景颜色工具类
    .bg-#{$colorKey} {
        background-color: $color;
    }
}

//text-align
@each $var in (left, center, right) {
    //工具类
    .text-#{$var} {
        text-align: $var !important;
    }
}

//font-size
@each $sizeKey,$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}


//text overflow
.text-ellipsis{
    display:inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap; 
}

//width,height
.w-100{
    width: 100%;
}
.h-100{
    height: 100%;
}

//flex
.d-flex {//水平
    display: flex;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {//换行
    flex-wrap: wrap;
}

//主轴和交叉轴的对其方式
@each $key,$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}


//主轴和交叉轴的对其方式
@each $key,$value in $flex-ai {
    .ai-#{$key} {
       align-items: $value;
    }
}


.flex-1 {
    flex: 1;//固定，撑满
}

.flex-grow-1 {
    flex-grow: 1;//自动拉伸
}


/*
1.边距的定义参考bootstrap
2.边距分为 margin 和 padding ，方向：上，下，左，右
*/
//spacing
//0-5：0..
//.mt-1 => margin-top level1
//.m-0,.mx-0
@each $typeKey,$type in $spacing-types {

   //.m-1
   @each $sizeKey,$size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size;
        }
    }

    //.mx-1,my-1
    @each $sizeKey,$size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} { //水平
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }

        .#{$typeKey}y-#{$sizeKey} { //垂直
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }
    }

    //.mt-1 
    @each $directionKey,$direction in $spacing-directions {
        @each $sizeKey,$size in $spacing-sizes {
            //.mt-1{margin-top:1rem}
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }

    //button
    .btn {
        border: none;
        border-radius: 0.1538rem;//2px
        font-size: map-get($font-sizes, 'sm') * $base-font-size;//表示从已有变量中取
        padding: 0.2rem 0.6rem;
        &.btn-lg {
            display: flex;
            justify-content: center;
            align-items: center;
            i {
                color: map-get($colors, 'primary');
                font-weight: bold;
                font-size: 1.5rem;
                margin-right: 0.5rem;
            }
            background: map-get($colors,'white-1');
            border:1px solid map-get($colors,'white-2');
            padding: 0.8rem 1rem;
            font-size: 1rem;
        }
    }

    //nav
    .nav {
        display: flex;//元素横向
        .nav-item {
            border-bottom: 3px solid transparent;
            padding-bottom: 0.2rem;
            &.active {
                color: map-get($colors, 'primary' );
                border-bottom-color:map-get($colors, 'primary');
            } 
        }
        &.nav-inverse {
            .nav-item{
                color: map-get($colors, 'white' );
                &.active{
                    border-bottom-color:map-get($colors, 'white');
                     
                 }
            }
           
        }
    }
}


//sprite(精灵图片)
.sprite {
    background: url(../images/index.png) no-repeat 0 0;
    background-size: 28.8462rem;  
    display: inline-block;
    &.sprite-news {
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 63.546% 15.517%;
    }

    &.sprite-arrow{
        width: 0.7692rem;
        height: 0.7692rem;
        background-position: 38.577% 52.076%;
    }

}


//borders
@each $dir in (top,right,bottom,left) {
    .border-#{$dir} {
        border-#{$dir} :1px solid $border-color
    }
}